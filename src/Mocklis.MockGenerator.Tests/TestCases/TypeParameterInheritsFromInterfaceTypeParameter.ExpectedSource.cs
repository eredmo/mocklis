// <auto-generated />

namespace Test
{
    partial class TestClass<T>
    {
        private readonly global::Mocklis.Core.TypedMockProvider _test = new global::Mocklis.Core.TypedMockProvider();

        public global::Mocklis.Core.ActionMethodMock<TInner> Test<TInner>() where TInner : T
        {
            var key = new[] { typeof(TInner) };
            return (global::Mocklis.Core.ActionMethodMock<TInner>)_test.GetOrAdd(key, keyString => new global::Mocklis.Core.ActionMethodMock<TInner>(this, "TestClass", "ITestClass", "Test" + keyString, "Test" + keyString, global::Mocklis.Core.Strictness.Lenient));
        }

        void global::Test.ITestClass<T>.Test<TInner>(TInner parameter) => Test<TInner>().Call(parameter);
    }
}
