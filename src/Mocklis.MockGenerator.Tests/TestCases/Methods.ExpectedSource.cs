// <auto-generated />

namespace Test
{
    partial class TestClass
    {
        // Add source for members in interface ITestClass
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock ActionWithoutParameters { get; }

        void global::Test.ITestClass.ActionWithoutParameters()
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock<int> ActionWithOneParameter { get; }

        void global::Test.ITestClass.ActionWithOneParameter(int i)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock<(int i1, int i2)> ActionWithTwoParameters { get; }

        void global::Test.ITestClass.ActionWithTwoParameters(int i1, int i2)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock<(int i1, int i2, int i3)> ActionWithThreeParameters { get; }

        void global::Test.ITestClass.ActionWithThreeParameters(int i1, int i2, int i3)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<int> FuncWithoutParameters { get; }

        int global::Test.ITestClass.FuncWithoutParameters()
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<int,int> FuncWithOneParameter { get; }

        int global::Test.ITestClass.FuncWithOneParameter(int i)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<(int i1, int i2),int> FuncWithTwoParameters { get; }

        int global::Test.ITestClass.FuncWithTwoParameters(int i1, int i2)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<(int i1, int i2, int i3),int> FuncWithThreeParameters { get; }

        int global::Test.ITestClass.FuncWithThreeParameters(int i1, int i2, int i3)
        // Adding constructors here...
    }
}
