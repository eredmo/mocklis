// <auto-generated />

namespace Test
{
    partial class TestClass
    {
        public global::Mocklis.Core.IndexerMock<int, int> Item { get; }

        ref int global::Test.ITestClass.this[int i] => ref global::Mocklis.Core.ByRef<int>.Wrap(Item[i]);

        protected virtual ref int Item0(string s)
        {
            throw new global::Mocklis.Core.MockMissingException(global::Mocklis.Core.MockType.VirtualIndexerGet, "TestClass", "ITestClass", "this[]", "Item0");
        }

        ref readonly int global::Test.ITestClass.this[string s] => ref Item0(s);

        public TestClass() : base()
        {
            this.Item = new global::Mocklis.Core.IndexerMock<int, int>(this, "TestClass", "ITestClass", "this[]", "Item", global::Mocklis.Core.Strictness.Lenient);
        }
    }
}
