// <auto-generated />

namespace Test
{
    partial class TestClass
    {
        protected virtual ref int ReturnsByRef()
        {
            throw new global::Mocklis.Core.MockMissingException(global::Mocklis.Core.MockType.VirtualPropertyGet, "TestClass", "ITestClass", "ReturnsByRef", "ReturnsByRef");
        }

        ref int global::Test.ITestClass.ReturnsByRef => ref ReturnsByRef();

        public global::Mocklis.Core.PropertyMock<int> ReturnsByRefReadonly { get; }

        ref readonly int global::Test.ITestClass.ReturnsByRefReadonly => ref global::Mocklis.Core.ByRef<int>.Wrap(ReturnsByRefReadonly.Value);

        public TestClass() : base()
        {
            this.ReturnsByRefReadonly = new global::Mocklis.Core.PropertyMock<int>(this, "TestClass", "ITestClass", "ReturnsByRefReadonly", "ReturnsByRefReadonly", global::Mocklis.Core.Strictness.Lenient);
        }
    }
}
