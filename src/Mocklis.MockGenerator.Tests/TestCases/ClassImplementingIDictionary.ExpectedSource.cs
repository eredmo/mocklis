// <auto-generated />

namespace Test
{
    partial class TestClass
    {
        // Add source for members in interface IDictionary
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<TKey,bool> ContainsKey { get; }

        bool global::System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey key)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock<(TKey key, TValue value)> Add { get; }

        void global::System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey key, TValue value)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<TKey,bool> Remove { get; }

        bool global::System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey key)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<TKey,(bool returnValue, TValue value)> TryGetValue { get; }

        bool global::System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey key, out TValue value)
        // Adding line for Property Based Indexer Mock
        // Adding line for Property Based Property Mock
        // Adding line for Property Based Property Mock
        // Add source for members in interface ICollection
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock<global::System.Collections.Generic.KeyValuePair<TKey, TValue>> Add0 { get; }

        void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(global::System.Collections.Generic.KeyValuePair<TKey, TValue> item)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock Clear { get; }

        void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<global::System.Collections.Generic.KeyValuePair<TKey, TValue>,bool> Contains { get; }

        bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>.Contains(global::System.Collections.Generic.KeyValuePair<TKey, TValue> item)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.ActionMethodMock<(global::System.Collections.Generic.KeyValuePair<TKey, TValue>[] array, int arrayIndex)> CopyTo { get; }

        void global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(global::System.Collections.Generic.KeyValuePair<TKey, TValue>[] array, int arrayIndex)
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<global::System.Collections.Generic.KeyValuePair<TKey, TValue>,bool> Remove0 { get; }

        bool global::System.Collections.Generic.ICollection<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(global::System.Collections.Generic.KeyValuePair<TKey, TValue> item)
        // Adding line for Property Based Property Mock
        // Adding line for Property Based Property Mock
        // Add source for members in interface IEnumerable
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>> GetEnumerator { get; }

        global::System.Collections.Generic.IEnumerator<global::System.Collections.Generic.KeyValuePair<TKey, TValue>> global::System.Collections.Generic.IEnumerable<global::System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
        // Add source for members in interface IEnumerable
        // Adding line for Property Based Method Mock

        public global::Mocklis.Core.FuncMethodMock<global::System.Collections.IEnumerator> GetEnumerator0 { get; }

        global::System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator()
        // Adding constructors here...
    }
}
