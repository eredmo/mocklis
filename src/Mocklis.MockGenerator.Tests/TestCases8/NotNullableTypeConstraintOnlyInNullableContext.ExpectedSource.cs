// <auto-generated />

namespace Test
{
    partial class TestClass<T>
    {
        private readonly global::Mocklis.Core.TypedMockProvider _test = new global::Mocklis.Core.TypedMockProvider();

        public global::Mocklis.Core.FuncMethodMock<U, T> Test<U>()
        {
            var key = new[] { typeof(U) };
            return (global::Mocklis.Core.FuncMethodMock<U, T>)Test.GetOrAdd(key, keyString => new global::Mocklis.Core.FuncMethodMock<U, T>(this, "TestClass", "ITestClass", "Test" + keyString, "Test" + keyString, global::Mocklis.Core.Strictness.Lenient));
        }

        T global::Test.ITestClass<T>.Test<U>(U item) => Test<U>().Call(item);
    }
}
