// <auto-generated />

#nullable enable

namespace Test
{
    partial class TestClass
    {
        private readonly global::Mocklis.Core.TypedMockProvider _doStuff = new global::Mocklis.Core.TypedMockProvider();

        public global::Mocklis.Core.ActionMethodMock<T?> DoStuff<T>() where T : class
        {
            var key = new[] { typeof(T) };
            return (global::Mocklis.Core.ActionMethodMock<T?>)DoStuff.GetOrAdd(key, keyString => new global::Mocklis.Core.ActionMethodMock<T?>(this, "TestClass", "ITestClass", "DoStuff" + keyString, "DoStuff" + keyString, global::Mocklis.Core.Strictness.Lenient));
        }

        void global::Test.ITestClass.DoStuff<T>(T? p) where T : class => DoStuff<T>().Call(p);
    }
}
